{"version":3,"file":"static/js/27.47aed7dd.chunk.js","mappings":"4RAGaA,EAAUC,EAAAA,EAAAA,IAAH,sMAWPC,EAAQD,EAAAA,EAAAA,IAAH,yGAOLE,EAAQF,EAAAA,EAAAA,GAAH,oEAKLG,EAAUH,EAAAA,EAAAA,GAAH,yEAKPI,EAAaJ,EAAAA,EAAAA,GAAH,wDAIVK,EAASL,EAAAA,EAAAA,GAAH,gIAQNM,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,mS,SC4BvB,EAhEqB,WAAO,IAAD,MACnBQ,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAeC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACpD,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,sGAEJC,EAFI,6CAEwCX,EAFxC,sDAGaY,EAAAA,EAAAA,IAAUD,GAHvB,OAGJE,EAHI,OAIVL,EAAWK,EAASC,MAJV,gDAMVC,QAAQC,MAAM,UANJ,yDAAH,qDASXN,GACD,GAAE,CAACV,KAEF,iCACE,SAACJ,EAAD,CAAYqB,GAAIf,EAAagB,QAA7B,oCAGA,UAAC7B,EAAD,YACE,SAACE,EAAD,CACE4B,IAAKZ,EAAQa,MACbC,IAAG,0CAAqCd,EAAQe,gBAElD,4BACE,SAAC9B,EAAD,UAAQe,EAAQa,SAChB,UAAC3B,EAAD,0BAA6C,GAAvBc,EAAQgB,aAA9B,QACA,SAAC9B,EAAD,wBACA,uBAAIc,EAAQiB,YACZ,SAAC/B,EAAD,sBACA,SAACC,EAAD,oBACGa,EAAQkB,cADX,aACG,EAAgBC,KAAI,SAAAC,GAAK,OACxB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADS,aAOhC,UAAClC,EAAD,YACE,yBACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAMwB,GAAG,OAAT,uBAGJ,yBACE,SAACxB,EAAD,WACE,SAAC,KAAD,CAAMwB,GAAG,UAAT,6BAIN,SAAC,EAAAa,SAAD,CAAUC,UAAU,qCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/details.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  padding-top: 40px;\n  padding-right: 72px;\n  padding-bottom: 40px;\n  padding-left: 36px;\n  min-width: 704px;\n  //   min-height: 400px;\n`;\n\nexport const Image = styled.img`\n  width: 240px;\n  height: 360px;\n  object-fit: cover;\n  border-radius: 25px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  font-size: 35px;\n`;\n\nexport const Headers = styled.h3`\n  margin: 10px 0;\n  text-transform: uppercase;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\nexport const AdInfo = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding-left: 36px;\n  background:lightgrey;\n  margin-bottom: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 14px;\n  line-height: calc(14 / 11);\n  border-radius: 20px;\n  display: inline-block;\n  padding: 5px;\n  text-transform: uppercase;\n  cursor: pointer;\n  border: 2px solid #212121;\n  background-color: #212121;\n  color: white;\n  margin-left: 36px;\n`;\n","import { useRef, Suspense, useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useParams, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Image, Title, Wrapper, Headers, GenresList, AdInfo, StyledLink } from './details.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieID } = useParams();\n  const locationLink = useRef(location.state?.from ?? '/movies');\n  const [details, setDetails] = useState({});\n  //useeffect for moviedetails\n  // console.log(location.state?.from);\n  // console.log(movieID);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const url = `https://api.themoviedb.org/3/movie/${movieID}?api_key=cb1bcc244723619ea7f2217b5a84ccd8`;\n        const response = await axios.get(url);\n        setDetails(response.data);\n      } catch (error) {\n        console.error('Error:');\n      }\n    };\n    fetch();\n  }, [movieID]);\n  return (\n    <>\n      <StyledLink to={locationLink.current}>\n      Back to previous page\n      </StyledLink>\n      <Wrapper>\n        <Image\n          alt={details.title}\n          src={`https://image.tmdb.org/t/p/w500/${details.poster_path}`}\n        ></Image>\n        <div>\n          <Title>{details.title}</Title>\n          <Headers>User score: {details.vote_average * 10}%</Headers>\n          <Headers>Overview</Headers>\n          <p>{details.overview}</p>\n          <Headers>Genres</Headers>\n          <GenresList>\n            {details.genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </GenresList>\n        </div>\n      </Wrapper>\n      {/* <Title>Additional information</Title> */}\n      <AdInfo>\n        <li>\n          <Headers>\n            <Link to=\"cast\">cast</Link>\n          </Headers>\n        </li>\n        <li>\n          <Headers>\n            <Link to=\"reviews\">reviews</Link>\n          </Headers>\n        </li>\n      </AdInfo>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Wrapper","styled","Image","Title","Headers","GenresList","AdInfo","StyledLink","Link","location","useLocation","movieID","useParams","locationLink","useRef","state","from","useState","details","setDetails","useEffect","fetch","url","axios","response","data","console","error","to","current","alt","title","src","poster_path","vote_average","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}